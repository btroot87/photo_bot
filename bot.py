# -*- coding: utf-8 -*-
import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.utils.executor import start_polling
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from dotenv import load_dotenv

load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")
OWNER_ID = 345927677

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN, parse_mode="HTML")
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(resize_keyboard=True)
main_kb.add(KeyboardButton("üì∏ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"))
main_kb.add(KeyboardButton("üë§ –û–±–æ –º–Ω–µ"))
main_kb.add(KeyboardButton("üìÅ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"))
main_kb.add(KeyboardButton("üåê –°–æ—Ü—Å–µ—Ç–∏"))
main_kb.add(KeyboardButton("üí¨ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã"))
main_kb.add(KeyboardButton("üí≤ –°—Ç–æ–∏–º–æ—Å—Ç—å"))
main_kb.add(KeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è"))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
people_kb = ReplyKeyboardMarkup(resize_keyboard=True).add("1", "2", "3+")
gender_kb = ReplyKeyboardMarkup(resize_keyboard=True).add("üë© –ñ–µ–Ω—â–∏–Ω–∞", "üë® –ú—É–∂—á–∏–Ω–∞")
idea_kb = ReplyKeyboardMarkup(resize_keyboard=True).add("–î–∞, –µ—Å—Ç—å", "–ù–µ—Ç, –ø–æ–º–æ–≥–∏ –ø—Ä–∏–¥—É–º–∞—Ç—å")
location_kb = ReplyKeyboardMarkup(resize_keyboard=True)
location_kb.add("üè† –°—Ç—É–¥–∏—è", "üå≥ –ü—Ä–∏—Ä–æ–¥–∞")
location_kb.add("üåá –ì–æ—Ä–æ–¥", "üìç –ú–æ—è –ª–æ–∫–∞—Ü–∏—è", "–î—Ä—É–≥–æ–µ")
purpose_kb = ReplyKeyboardMarkup(resize_keyboard=True)
purpose_kb.add("üíñ –î–ª—è —Å–µ–±—è", "üì≤ –î–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π")
purpose_kb.add("üíº –î–µ–ª–æ–≤–æ–π –ø–æ—Ä—Ç—Ä–µ—Ç", "üèÅ –í –ø–æ–¥–∞—Ä–æ–∫", "–î—Ä—É–≥–æ–µ")

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class BookingForm(StatesGroup):
    name = State()
    people = State()
    gender = State()
    age = State()
    purpose = State()
    idea = State()
    location = State()
    date = State()

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –í—è—á–µ—Å–ª–∞–≤–∞üì∏\n–ì–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å—ä—ë–º–∫—É, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–æ–º.",
        reply_markup=main_kb
    )

@dp.message_handler(lambda m: m.text == "üì∏ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
async def booking_start(message: types.Message, state: FSMContext):
    data = await state.get_data()
    if data.get("date"):
        gender = data.get("gender", "")
        suffix = "–∞" if "–∂–µ–Ω" in gender.lower() else ""
        await message.answer(f"–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –≤—Ç–æ—Ä–æ–π —Ä–∞–∑{suffix}?", reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add("–î–∞", "–ù–µ—Ç"))
        return
    if not data.get("name"):
        await message.answer("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        await BookingForm.name.set()
    else:
        await message.answer("–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –Ω–∞ —Å—ä—ë–º–∫–µ?", reply_markup=people_kb)
        await BookingForm.people.set()

@dp.message_handler(lambda m: m.text in ["–î–∞", "–ù–µ—Ç"])
async def confirm_restart(message: types.Message, state: FSMContext):
    if message.text == "–î–∞":
        data = await state.get_data()
        await state.finish()
        await state.update_data(name=data.get("name"))
        await message.answer("–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –Ω–∞ —Å—ä—ë–º–∫–µ?", reply_markup=people_kb)
        await BookingForm.people.set()
    else:
        await message.answer("–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ —á—Ç–æ ‚Äî —è —Ä—è–¥–æ–º)", reply_markup=main_kb)

@dp.message_handler(state=BookingForm.name)
async def get_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}! –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –Ω–∞ —Å—ä—ë–º–∫–µ?", reply_markup=people_kb)
    await BookingForm.people.set()

@dp.message_handler(state=BookingForm.people)
async def get_people(message: types.Message, state: FSMContext):
    await state.update_data(people=message.text)
    await message.answer("–ü–æ–ª —É—á–∞—Å—Ç–Ω–∏–∫–∞(–æ–≤)?", reply_markup=gender_kb)
    await BookingForm.gender.set()

@dp.message_handler(state=BookingForm.gender)
async def get_gender(message: types.Message, state: FSMContext):
    await state.update_data(gender=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?", reply_markup=ReplyKeyboardRemove())
    await BookingForm.age.set()

@dp.message_handler(state=BookingForm.age)
async def get_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await message.answer("–î–ª—è —á–µ–≥–æ —Ç–µ–±–µ –Ω—É–∂–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?", reply_markup=purpose_kb)
    await BookingForm.purpose.set()

@dp.message_handler(state=BookingForm.purpose)
async def get_purpose(message: types.Message, state: FSMContext):
    await state.update_data(purpose=message.text)
    await message.answer("–ï—Å—Ç—å –∏–¥–µ—è –¥–ª—è —Å—ä—ë–º–∫–∏?", reply_markup=idea_kb)
    await BookingForm.idea.set()

@dp.message_handler(state=BookingForm.idea)
async def get_idea(message: types.Message, state: FSMContext):
    await state.update_data(idea=message.text)
    await message.answer("–ì–¥–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å—ä—ë–º–∫—É?", reply_markup=location_kb)
    await BookingForm.location.set()

@dp.message_handler(state=BookingForm.location)
async def get_location(message: types.Message, state: FSMContext):
    await state.update_data(location=message.text)
    await message.answer("–£–∫–∞–∂–∏ —É–¥–æ–±–Ω—É—é –¥–ª—è —Ç–µ–±—è –¥–∞—Ç—É üìÖ", reply_markup=ReplyKeyboardRemove())
    await BookingForm.date.set()

@dp.message_handler(state=BookingForm.date)
async def get_date(message: types.Message, state: FSMContext):
    await state.update_data(date=message.text)
    data = await state.get_data()
    user = message.from_user
    contact = f"@{user.username}" if user.username else f"https://t.me/{user.id}"

    text = (
        f"üì∏ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é!\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üë• –ö–æ–ª-–≤–æ: {data['people']}\n"
        f"‚ôÄÔ∏è –ü–æ–ª: {data['gender']}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"üéØ –¶–µ–ª—å: {data['purpose']}\n"
        f"üí° –ò–¥–µ—è: {data['idea']}\n"
        f"üìç –õ–æ–∫–∞—Ü–∏—è: {data['location']}\n"
        f"üìÖ –î–∞—Ç–∞: {data['date']}\n"
        f"üì± –ö–æ–Ω—Ç–∞–∫—Ç: {contact}"
    )

    await message.answer("–°–ø–∞—Å–∏–±–æ! –Ø –≤—Å—ë –∑–∞–ø–∏—Å–∞–ª–∞, —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Å—å —Å —Ç–æ–±–æ–π üôÇ", reply_markup=main_kb)
    try:
        await bot.send_message(chat_id=OWNER_ID, text=text)
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü—É: {e}")

    await state.finish()

@dp.message_handler(lambda m: m.text == "üí¨ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
async def show_faq(message: types.Message):
    await message.answer(
        "üìã –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
        "üí≤ <b>–°–∫–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —è –ø–æ–ª—É—á—É?</b>\n"
        "–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–¥–∞—á–∏ –∏ –∏–¥–µ–∏, —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ 40 —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–Ω–Ω—ã—Ö —Å–Ω–∏–º–∫–æ–≤. –Ø –Ω–µ –æ—Ç–¥–∞—é –≤—Å—ë –ø–æ–¥—Ä—è–¥ ‚Äî —Ç–æ–ª—å–∫–æ –ª—É—á—à–∏–µ –∫–∞–¥—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –∏ —Ç—ã.\n\n"
        "üíÑ <b>–ö–∞–∫–∏–µ –µ—Å—Ç—å —É—Å–ª—É–≥–∏?</b>\n"
        "‚Äî –ü–æ–º–æ—â—å —Å –∏–¥–µ–µ–π, –æ–±—Ä–∞–∑–æ–º –∏ –ª–æ–∫–∞—Ü–∏–µ–π, –≤—ã–±–æ—Ä–æ–º —Å—Ç—É–¥–∏–∏ ‚Äî –≤–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å\n"
        "‚Äî –ê—Ä–µ–Ω–¥–∞ —Å—Ç—É–¥–∏–∏ ‚Äî –æ–ø–ª–∞—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ\n"
        "‚Äî –ú–∞–∫–∏—è–∂ –∏ —É–∫–ª–∞–¥–∫–∞, —Å—Ç–∏–ª–∏—Å—Ç, –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, —É –º–µ–Ω—è –±–æ–ª—å—à–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ - —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ\n\n"
        "üåç <b>–í–æ–∑–º–æ–∂–Ω–∞ –ª–∏ —Å—ä—ë–º–∫–∞ –≤ –¥—Ä—É–≥–æ–º –≥–æ—Ä–æ–¥–µ?</b>\n"
        "–ö–æ–Ω–µ—á–Ω–æ! –í—Å—ë –æ–±—Å—É–∂–¥–∞–µ–º–æ, —è –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –æ–¥–Ω–∏–º —Ä–µ–≥–∏–æ–Ω–æ–º!",
        parse_mode="HTML"
    )

@dp.message_handler(lambda m: m.text == "üìÅ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ")
async def portfolio(message: types.Message):
    await message.answer("üì∑ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ: https://btroot.ru/portraits")

@dp.message_handler(lambda m: m.text == "üåê –°–æ—Ü—Å–µ—Ç–∏")
async def socials(message: types.Message):
    await message.answer("üì± –ú–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏:\n\nüëâ <a href=\"https://www.instagram.com/btroot_photo\">Instagram</a>\nüëâ <a href=\"https://vk.com/btroot_photo\">–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>", parse_mode="HTML")

@dp.message_handler(lambda m: m.text == "üë§ –û–±–æ –º–Ω–µ")
async def about_me(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –í—è—á–µ—Å–ª–∞–≤.\n"
        "–Ø —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ –∏–∑ –í–æ—Ä–æ–Ω–µ–∂–∞. –°–Ω–∏–º–∞—é —É–∂–µ –±–æ–ª—å—à–µ 14 –ª–µ—Ç.\n\n"
        "–ö–æ–≥–¥–∞-—Ç–æ –≤—Å—ë –Ω–∞—á–∞–ª–æ—Å—å –ø—Ä–æ—Å—Ç–æ ‚Äî –Ω—Ä–∞–≤–∏–ª–æ—Å—å –∑–∞–º–µ—á–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ, –ª–æ–≤–∏—Ç—å —Å–≤–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ. –ü–æ—Ç–æ–º –ø–æ—è–≤–∏–ª–∏—Å—å –ø–ª—ë–Ω–∫–∞, —Ä—É—á–Ω–∞—è –ø—Ä–æ—è–≤–∫–∞, —Å–æ—Ü—Å–µ—Ç–∏ –∏ –ø–µ—Ä–≤—ã–µ –∑–∞–∫–∞–∑—ã. –ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è –±—ã–ª–æ –≤—Å—ë: –∏ –ø–æ—Ä—Ç—Ä–µ—Ç—ã, –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å—ä—ë–º–∫–∏, –∏ —Å–≤–∞–¥—å–±—ã, –∏ –≤—ã–ø–∏—Å–∫–∏ –∏–∑ —Ä–æ–¥–¥–æ–º–∞, –∏ –¥–∞–∂–µ –≤—ã–∫—É–ø—ã –≤ –ø–æ–¥—ä–µ–∑–¥–µ)\n\n"
        "–°–µ–π—á–∞—Å –º–Ω–µ –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –≤ –∫–∞–¥—Ä–µ. –ù–µ –ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞—Ç—å, –Ω–µ –ø—Ä—è—Ç–∞—Ç—å ‚Äî –∞ –Ω–∞–æ–±–æ—Ä–æ—Ç, –¥–µ–ª–∞—Ç—å –≤–∏–¥–∏–º—ã–º —Ç–æ, —á—Ç–æ –≤ —Ç–µ–±–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ.\n"
        "–Ø –ø–æ–º–æ–≥–∞—é —Å –∏–¥–µ–µ–π, –æ–±—Ä–∞–∑–æ–º, –ª–æ–∫–∞—Ü–∏–µ–π, –ø—Ä–æ–¥—É–º—ã–≤–∞—é –≤—Å—ë –¥–æ –º–µ–ª–æ—á–µ–π. –û—á–µ–Ω—å –≤–∞–∂–Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ ‚Äî —á—Ç–æ–±—ã –±—ã–ª–æ —Å–ø–æ–∫–æ–π–Ω–æ, –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ, –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É.\n\n"
        "–ï—Å–ª–∏ —Ç–µ–±–µ –±–ª–∏–∑–æ–∫ —Ç–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ ‚Äî –ø–∏—à–∏, —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ—Å–Ω–∏–º–∞–µ–º."
    )

@dp.message_handler(lambda m: m.text == "üí≤ –°—Ç–æ–∏–º–æ—Å—Ç—å")
async def prices(message: types.Message):
    await message.answer(
        "<b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞–∫–µ—Ç</b>\n"
        "5.000 —Ä.\n"
        "–°—ä–µ–º–æ—á–Ω–æ–µ –≤—Ä–µ–º—è ‚Äî 1 —á–∞—Å\n"
        "–ü–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –æ–±—Ä–∞–∑–∞, –ª–æ–∫–∞—Ü–∏–∏\n"
        "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–¥–µ–∏ –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Å—ä–µ–º–∫–∏\n"
        "10 ‚Äî 20 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∞–≤—Ç–æ—Ä—Å–∫–æ–π —Ä–µ—Ç—É—à–∏, –∏ —ç—Ç–æ –±—É–¥—É—Ç –Ω–µ –¥—É–±–ª–∏\n"
        "–û–¥–∏–Ω –æ–±—Ä–∞–∑, –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ü–µ–Ω\n"
        "–°—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç –¥–≤—É—Ö –¥–Ω–µ–π\n\n"
        "<b>–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç</b>\n"
        "9.000 —Ä.\n"
        "–°—ä–µ–º–æ—á–Ω–æ–µ –≤—Ä–µ–º—è ‚Äî 2 —á–∞—Å–∞\n"
        "–ü–æ–º–æ—â—å –≤ –ø–æ–¥–±–æ—Ä–µ –æ–±—Ä–∞–∑–∞, –ª–æ–∫–∞—Ü–∏–∏\n"
        "–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–¥–µ–∏ –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ —Å—ä–µ–º–∫–∏\n"
        "–î–æ 40 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∞–≤—Ç–æ—Ä—Å–∫–æ–π —Ä–µ—Ç—É—à–∏\n"
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–º–µ–Ω–∏—Ç—å –¥–æ 2 –æ–±—Ä–∞–∑–æ–≤\n"
        "–°—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç –¥–≤—É—Ö –¥–Ω–µ–π",
        parse_mode="HTML"
    )

@dp.message_handler(lambda m: m.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è")
async def contact(message: types.Message):
    await message.answer("üì¢ –ù–∞–ø–∏—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É –Ω–∞–ø—Ä—è–º—É—é: @btroot\n–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ üíå")

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    start_polling(dp, skip_updates=True)